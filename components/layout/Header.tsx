// Copyright (c) 2025 Devin Hunt contact@devinhunt.com
// components/layout/Header.tsx
// This was generated by Claude Sonnet 3.5, with the assistance of my human mentor
// A header that flows as smoothly as a well-managed watershed!

'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';

/**
 * Navigation link component for desktop view
 * @param {Object} props - Component props
 * @param {string} props.href - Link destination
 * @param {React.ReactNode} props.children - Link text
 * @returns {React.JSX.Element} Navigation link
 */
function NavLink({ href, children }: { href: string; children: React.ReactNode }) {
  return (
    <Link 
      href={href} 
      className="text-forest-700 hover:text-forest-900 transition-colors duration-200"
    >
      {children}
    </Link>
  );
}

/**
 * Navigation link component for mobile view
 * @param {Object} props - Component props
 * @param {string} props.href - Link destination
 * @param {() => void} props.onClick - Click handler function
 * @param {React.ReactNode} props.children - Link text
 * @returns {React.JSX.Element} Mobile navigation link
 */
function MobileNavLink({ 
  href, 
  onClick, 
  children 
}: { 
  href: string; 
  onClick: () => void; 
  children: React.ReactNode;
}) {
  return (
    <Link 
      href={href} 
      className="block px-2 py-1 text-forest-700 hover:text-forest-900 transition-colors duration-200"
      onClick={onClick}
    >
      {children}
    </Link>
  );
}

/**
 * Header component with navigation menu
 * @returns {React.JSX.Element} Header with navigation
 */
export default function Header() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Handle scroll event to change header style on scroll
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  return (
    <header 
      className={`sticky top-0 z-50 w-full transition-all duration-300 ${
        isScrolled 
          ? 'bg-white/80 backdrop-blur-md shadow-sm' 
          : 'bg-transparent'
      }`}
    >
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          <Link href="/" className="font-bold text-xl text-forest-800">
            Devin Hunt
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-6">
            <NavLink href="/">Home</NavLink>
            <NavLink href="/resume">Resume</NavLink>
            <NavLink href="/portfolio">Portfolio</NavLink>
            <NavLink href="/interests">Interests</NavLink>
          </nav>

          {/* Mobile Menu Button */}
          <button 
            className="md:hidden text-forest-800"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            aria-label="Toggle menu"
          >
            {isMobileMenuOpen ? (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            ) : (
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <line x1="3" y1="12" x2="21" y2="12"></line>
                <line x1="3" y1="6" x2="21" y2="6"></line>
                <line x1="3" y1="18" x2="21" y2="18"></line>
              </svg>
            )}
          </button>
        </div>

        {/* Mobile Navigation Menu */}
        {isMobileMenuOpen && (
          <div className="md:hidden py-4 border-t border-forest-100">
            <nav className="flex flex-col space-y-4">
              <MobileNavLink href="/" onClick={() => setIsMobileMenuOpen(false)}>
                Home
              </MobileNavLink>
              <MobileNavLink href="/resume" onClick={() => setIsMobileMenuOpen(false)}>
                Resume
              </MobileNavLink>
              <MobileNavLink href="/portfolio" onClick={() => setIsMobileMenuOpen(false)}>
                Portfolio
              </MobileNavLink>
              <MobileNavLink href="/interests" onClick={() => setIsMobileMenuOpen(false)}>
                Interests
              </MobileNavLink>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
}
